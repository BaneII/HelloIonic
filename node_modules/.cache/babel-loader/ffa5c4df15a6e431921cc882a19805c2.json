{"ast":null,"code":"import { useState } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { useFilesystem, base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { CameraResultType, CameraSource, FilesystemDirectory } from \"@capacitor/core\";\nexport function usePhotoGallery() {\n  const {\n    deleteFile,\n    getUri,\n    readFile,\n    writeFile\n  } = useFilesystem();\n  const {\n    getPhoto\n  } = useCamera();\n  const [photos, setPhotos] = useState([]);\n\n  const savePicture = async (photo, fileName) => {\n    const base64Data = await base64FromPath(photo.webPath);\n    await writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n    return getPhotoFile(photo, fileName);\n  };\n\n  const getPhotoFile = async (cameraPhoto, fileName) => {\n    return {\n      filepath: fileName,\n      webviewPath: cameraPhoto.webPath\n    };\n  };\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}","map":{"version":3,"sources":["/home/bane/2019-2020/HelloIonic/photo-gallery/src/hooks/usePhotoGallery.tsx"],"names":["useState","useCamera","useFilesystem","base64FromPath","CameraResultType","CameraSource","FilesystemDirectory","usePhotoGallery","deleteFile","getUri","readFile","writeFile","getPhoto","photos","setPhotos","savePicture","photo","fileName","base64Data","webPath","path","data","directory","Data","getPhotoFile","cameraPhoto","filepath","webviewPath","takePhoto","resultType","Uri","source","Camera","quality","Date","getTime","savedFileImage","newPhotos"],"mappings":"AAAA,SAASA,QAAT,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,+BAA9C;AAGA,SAASC,gBAAT,EAA2BC,YAA3B,EAAiEC,mBAAjE,QAA4F,iBAA5F;AAGA,OAAO,SAASC,eAAT,GAA2B;AAEhC,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA8CT,aAAa,EAAjE;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeX,SAAS,EAA9B;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAU,EAAV,CAApC;;AAEA,QAAMe,WAAW,GAAG,OAAOC,KAAP,EAA2BC,QAA3B,KAAgD;AAClE,UAAMC,UAAU,GAAG,MAAMf,cAAc,CAACa,KAAK,CAACG,OAAP,CAAvC;AACA,UAAMR,SAAS,CAAC;AACdS,MAAAA,IAAI,EAAEH,QADQ;AAEdI,MAAAA,IAAI,EAAEH,UAFQ;AAGdI,MAAAA,SAAS,EAAEhB,mBAAmB,CAACiB;AAHjB,KAAD,CAAf;AAKA,WAAOC,YAAY,CAACR,KAAD,EAAQC,QAAR,CAAnB;AACD,GARD;;AAUA,QAAMO,YAAY,GAAG,OAAOC,WAAP,EAAiCR,QAAjC,KAAsE;AACzF,WAAO;AACLS,MAAAA,QAAQ,EAAET,QADL;AAELU,MAAAA,WAAW,EAAEF,WAAW,CAACN;AAFpB,KAAP;AAID,GALD;;AAOA,QAAMS,SAAS,GAAG,YAAY;AAC5B,UAAMH,WAAW,GAAG,MAAMb,QAAQ,CAAC;AACjCiB,MAAAA,UAAU,EAAEzB,gBAAgB,CAAC0B,GADI;AAEjCC,MAAAA,MAAM,EAAE1B,YAAY,CAAC2B,MAFY;AAGjCC,MAAAA,OAAO,EAAE;AAHwB,KAAD,CAAlC;AAKA,UAAMhB,QAAQ,GAAG,IAAIiB,IAAJ,GAAWC,OAAX,KAAuB,OAAxC;AACA,UAAMC,cAAc,GAAG,MAAMrB,WAAW,CAACU,WAAD,EAAcR,QAAd,CAAxC;AACA,UAAMoB,SAAS,GAAG,CAACD,cAAD,EAAiB,GAAGvB,MAApB,CAAlB;AACAC,IAAAA,SAAS,CAACuB,SAAD,CAAT;AACD,GAVD;;AAYA,SAAO;AACLxB,IAAAA,MADK;AAELe,IAAAA;AAFK,GAAP;AAMD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useCamera } from '@ionic/react-hooks/camera';\nimport { useFilesystem, base64FromPath } from '@ionic/react-hooks/filesystem';\nimport { useStorage } from '@ionic/react-hooks/storage';\nimport { isPlatform } from '@ionic/react';\nimport { CameraResultType, CameraSource, CameraPhoto, Capacitor, FilesystemDirectory } from \"@capacitor/core\";\n\n\nexport function usePhotoGallery() {\n\n  const { deleteFile, getUri, readFile, writeFile } = useFilesystem();\n  const { getPhoto } = useCamera();\n  const [photos, setPhotos] = useState<Photo[]>([]);\n\n  const savePicture = async (photo: CameraPhoto, fileName: string) => {\n    const base64Data = await base64FromPath(photo.webPath!);\n    await writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n    return getPhotoFile(photo, fileName);\n  };\n\n  const getPhotoFile = async (cameraPhoto: CameraPhoto, fileName: string): Promise<Photo> => {\n    return {\n      filepath: fileName,\n      webviewPath: cameraPhoto.webPath\n    };\n  };\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos)\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n\n\n}\n\nexport interface Photo {\n  filepath: string;\n  webviewPath?: string;\n  base64?: string;\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}